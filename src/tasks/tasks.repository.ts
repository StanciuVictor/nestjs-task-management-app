import { EntityRepository, Repository } from 'typeorm';
import { CreateTaskDto } from './dto/create-task.dto';
import { TaskStatus } from './task-status.enum';
import { Task } from './task.entity';

@EntityRepository(Task)
export class TasksRepository extends Repository<Task> {
  /**
   * Creates and saves a task in the database based on the parameters received
   *
   * @param {CreateTaskDto} createTaskDto
   * @return {*}  {Promise<Task>}
   * @memberof TasksRepository
   */
  async createTask(createTaskDto: CreateTaskDto): Promise<Task> {
    const { title, description } = createTaskDto;

    // Create the object based on the repository ?
    const task = this.create({
      // Specify properties that correspond to the properties in the Entity
      // Do not specify id because in the Entity the id is automatically generated by typeorm with uuid
      title,
      description,
      status: TaskStatus.OPEN,
    });

    // Save the task in the database
    await this.save(task);

    return task;
  }
}
